warning: LF will be replaced by CRLF in go.mod.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in go.sum.
The file will have its original line endings in your working directory
[1mdiff --git a/go.mod b/go.mod[m
[1mindex 49e9aae..a65904b 100644[m
[1m--- a/go.mod[m
[1m+++ b/go.mod[m
[36m@@ -9,6 +9,7 @@[m [mrequire ([m
 	github.com/go-playground/universal-translator v0.18.0 // indirect[m
 	github.com/go-playground/validator/v10 v10.11.0 // indirect[m
 	github.com/go-sql-driver/mysql v1.6.0 // indirect[m
[32m+[m	[32mgithub.com/golang-jwt/jwt v3.2.2+incompatible // indirect[m
 	github.com/golang/protobuf v1.5.2 // indirect[m
 	github.com/jinzhu/inflection v1.0.0 // indirect[m
 	github.com/jinzhu/now v1.1.5 // indirect[m
[1mdiff --git a/go.sum b/go.sum[m
[1mindex 47ab2db..53fe070 100644[m
[1m--- a/go.sum[m
[1m+++ b/go.sum[m
[36m@@ -17,6 +17,8 @@[m [mgithub.com/go-playground/validator/v10 v10.11.0 h1:0W+xRM511GY47Yy3bZUbJVitCNg2B[m
 github.com/go-playground/validator/v10 v10.11.0/go.mod h1:i+3WkQ1FvaUjjxh1kSvIA4dMGDBiPU55YFDl0WbKdWU=[m
 github.com/go-sql-driver/mysql v1.6.0 h1:BCTh4TKNUYmOmMUcQ3IipzF5prigylS7XXjEkfCHuOE=[m
 github.com/go-sql-driver/mysql v1.6.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=[m
[32m+[m[32mgithub.com/golang-jwt/jwt v3.2.2+incompatible h1:IfV12K8xAKAnZqdXVzCZ+TOjboZ2keLg81eXfW3O+oY=[m
[32m+[m[32mgithub.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=[m
 github.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=[m
 github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=[m
 github.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=[m
[1mdiff --git a/handler/user.go b/handler/user.go[m
[1mindex a201b3d..2b11691 100644[m
[1m--- a/handler/user.go[m
[1m+++ b/handler/user.go[m
[36m@@ -1,6 +1,7 @@[m
 package handler[m
 [m
 import ([m
[32m+[m	[32m"bwa-backer/auth"[m
 	"bwa-backer/helper"[m
 	"bwa-backer/user"[m
 	"fmt"[m
[36m@@ -11,11 +12,13 @@[m [mimport ([m
 [m
 type UserHandler struct {[m
 	userService user.Service[m
[32m+[m	[32mauthService auth.Service[m
 }[m
 [m
[31m-func NewUserHandler(userService user.Service) *UserHandler {[m
[32m+[m[32mfunc NewUserHandler(userService user.Service, authService auth.Service) *UserHandler {[m
 	return &UserHandler{[m
 		userService: userService,[m
[32m+[m		[32mauthService: authService,[m
 	}[m
 }[m
 [m
[36m@@ -37,7 +40,14 @@[m [mfunc (handler *UserHandler) RegisterUser(c *gin.Context) {[m
 		c.JSON(http.StatusBadRequest, response)[m
 		return[m
 	}[m
[31m-	formatter := user.FormatUser(newUser, "tokentokentoken")[m
[32m+[m
[32m+[m	[32mtoken, err := handler.authService.GenerateToken(newUser.Id)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mresponse := helper.APIResponse("Register account failed", http.StatusBadRequest, "failed", nil)[m
[32m+[m		[32mc.JSON(http.StatusBadRequest, response)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m	[32mformatter := user.FormatUser(newUser, token)[m
 	response := helper.APIResponse("Account has been registered", http.StatusOK, "success", formatter)[m
 [m
 	c.JSON(http.StatusOK, response)[m
[36m@@ -63,7 +73,16 @@[m [mfunc (handler *UserHandler) Login(c *gin.Context) {[m
 		return[m
 	}[m
 [m
[31m-	formatter := user.FormatUser(loggedInUser, "tokentokentoken")[m
[32m+[m	[32mtoken, err := handler.authService.GenerateToken(loggedInUser.Id)[m
[32m+[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32merrorMessage := gin.H{"errors": err.Error()}[m
[32m+[m		[32mresponse := helper.APIResponse("Login failed", http.StatusUnprocessableEntity, "failed", errorMessage)[m
[32m+[m		[32mc.JSON(http.StatusUnprocessableEntity, response)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mformatter := user.FormatUser(loggedInUser, token)[m
 	response := helper.APIResponse("Login success", http.StatusOK, "success", formatter)[m
 	c.JSON(http.StatusOK, response)[m
 }[m
[1mdiff --git a/main.go b/main.go[m
[1mindex 984c06d..f3b00c5 100644[m
[1m--- a/main.go[m
[1m+++ b/main.go[m
[36m@@ -3,6 +3,7 @@[m [mpackage main[m
 import ([m
 	"log"[m
 [m
[32m+[m	[32m"bwa-backer/auth"[m
 	"bwa-backer/handler"[m
 	"bwa-backer/user"[m
 [m
[36m@@ -21,8 +22,9 @@[m [mfunc main() {[m
 [m
 	userRepository := user.NewRepository(db)[m
 	userService := user.NewService(userRepository)[m
[32m+[m	[32mauthService := auth.NewService()[m
 [m
[31m-	userHandler := handler.NewUserHandler(userService)[m
[32m+[m	[32muserHandler := handler.NewUserHandler(userService, authService)[m
 [m
 	router := gin.Default()[m
 [m
